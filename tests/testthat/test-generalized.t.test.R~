set.seed(1)

t_test_res_eq <- c()
gtt_res_0_eq <- c()
gtt_res_i <- c()
gtt_meh_res_i <- c()
for(i in 1:10000) {
    n1 <- sample(seq(4, 30, 2), 1)
    n2 <- sample(seq(4, 30, 2), 1)
    lfc <- runif(1, -3, 3)
    x <- rnorm(n1, 0)
    y <- rnorm(n2, lfc)
    epsilon_u <- runif(1, -1, 2)
    epsilon_l <- epsilon_u + runif(1, -1, 0)
    z <- c(x, y)
    conds <- c(rep(0, n1), rep(1, n2))

    t_test_res_eq <- c(t_test_res_eq, t.test(y, x, var.equal=T)$p.value)
    gtt_res_0_eq <- c(gtt_res_0_eq,
                      generalized.t.test(z[conds==1], z[conds==0], 0, 0, equal.var=T)$p) 
    gtt_res_i <- c(gtt_res_i,
                   generalized.t.test(z[conds==1], z[conds==0], epsilon_l, epsilon_u,
                                      equal.var=T)$p)
    gtt_meh_res_i <- c(gtt_meh_res_i,
                       generalized.t.test.mehring(z, conds, epsilon_l, epsilon_u)$p)
}

t_test_res_neq <- c()
gtt_res_0_neq <- c()
for(i in 1:10000) {
    n1 <- sample(seq(4, 30, 2), 1)
    n2 <- sample(seq(4, 30, 2), 1)
    s1 <- runif(1, 0.1, 2)
    s2 <- runif(1, 0.1, 2)
    lfc <- runif(1, -3, 3)
    x <- rnorm(n1, 0, s1)
    y <- rnorm(n2, lfc, s2)
    epsilon_u <- runif(1, -1, 2)
    epsilon_l <- epsilon_u + runif(1, -1, 0)
    z <- c(x, y)
    conds <- c(rep(0, n1), rep(1, n2))
    
    t_test_res_neq <- c(t_test_res_neq, t.test(y, x, var.equal=F)$p.value)
    gtt_res_0_neq <- c(gtt_res_0_neq,
                       generalized.t.test(y, x, 0, 0, equal.var=F)$p)
}

test_that("gtt.test.fast expected relationships to t.test function", {
    expect_equal(
        gtt_res_i,
        gtt_meh_res_i
    )

    expect_equal(
        t_test_res_eq,
        gtt_res_0_eq
    )

    expect_equal(
        t_test_res_neq,
        gtt_res_0_neq
    )
    
})

